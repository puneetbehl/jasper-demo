buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.ajoberstar:gradle-git:1.4.2'
    }
}

version "2.1.0.RC1"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
    jasperReportsVersion = "5.6.1"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"

    compile "com.lowagie:itext:2.1.7"
    compile("net.sf.jasperreports:jasperreports:5.6.1") {
        exclude module: 'antlr'
        exclude module: 'commons-logging'
        exclude module: 'ant'
        exclude module: 'mondrian'
        exclude module: 'commons-javaflow'
        exclude module: 'barbecue'
        exclude module: 'xml-apis-ext'
        exclude module: 'xml-apis'
        exclude module: 'xalan'
        exclude module: 'groovy-all'
        exclude module: 'hibernate'
        exclude module: 'saaj-api'
        exclude module: 'servlet-api'
        exclude module: 'xercesImpl'
        exclude module: 'xmlParserAPIs'
        exclude module: 'spring-core'
        exclude module: 'bsh'
        exclude module: 'spring-beans'
        exclude module: 'jaxen'
        exclude module: 'barcode4j'
        exclude module: 'batik-svg-dom'
        exclude module: 'batik-xml'
        exclude module: 'batik-awt-util'
        exclude module: 'batik-dom'
        exclude module: 'batik-css'
        exclude module: 'batik-gvt'
        exclude module: 'batik-script'
        exclude module: 'batik-svggen'
        exclude module: 'batik-util'
        exclude module: 'batik-bridge'
        exclude module: 'persistence-api'
        exclude module: 'jdtcore'
        exclude module: 'bcmail-jdk16'
        exclude module: 'bcprov-jdk16'
        exclude module: 'bctsp-jdk16'
        exclude module: 'bcmail-jdk14'
        exclude module: 'bcprov-jdk14'
        exclude module: 'bctsp-jdk14'
        exclude module: 'xmlbeans'
        exclude module: 'olap4j'
    }
    compile "org.apache.poi:poi:3.10-FINAL"
    compile "commons-io:commons-io:2.2"

    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
}

apply from: "gradle/documentation.gradle"
apply from: "gradle/publish.gradle"